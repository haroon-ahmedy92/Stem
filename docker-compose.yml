version: '3.8'

services:
  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: stem-mysql
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: Stemdb2
      MYSQL_USER: venlit
      MYSQL_PASSWORD: venlit
      MYSQL_ROOT_PASSWORD: rootpassword
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks:
      - stem-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  # Redis for caching (optional but recommended for production)
  redis:
    image: redis:7-alpine
    container_name: stem-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - stem-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 3s
      retries: 3

  # Spring Boot Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: stem-app
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/Stemdb2
      SPRING_DATASOURCE_USERNAME: venlit
      SPRING_DATASOURCE_PASSWORD: venlit
      SPRING_REDIS_HOST: redis
      SPRING_REDIS_PORT: 6379
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - stem-network
    volumes:
      - app_logs:/app/logs
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8000/actuator/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 120s
    # Add startup delay to ensure database is fully ready
    command: >
      sh -c "
        echo 'Waiting for database to be fully ready...' &&
        sleep 30 &&
        java -jar app.jar
      "

  # Nginx reverse proxy
  nginx:
    image: nginx:alpine
    container_name: stem-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - nginx_logs:/var/log/nginx
    depends_on:
      - app
    networks:
      - stem-network

networks:
  stem-network:
    driver: bridge

volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local
  app_logs:
    driver: local
  nginx_logs:
    driver: local